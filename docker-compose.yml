version: '3.8'

services:
  db:
    image: ankane/pgvector:latest
    container_name: ai_agency_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ai_agency
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ai_agency_network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ai_agency_app
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/ai_agency
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - GCP_PROJECT_ID=${GCP_PROJECT_ID:-}
      - GCS_BUCKET=${GCS_BUCKET:-}
      - LLM_PROVIDER=${LLM_PROVIDER:-openai}
      - VERTEX_AI_LOCATION=${VERTEX_AI_LOCATION:-us-central1}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - ENVIRONMENT=development
    depends_on:
      db:
        condition: service_healthy
    volumes:
      # Hot reload for development
      - ./app:/app/app:ro
    command: uvicorn app.main:app --host 0.0.0.0 --port 8080 --reload
    networks:
      - ai_agency_network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  ai_agency_network:
    driver: bridge
